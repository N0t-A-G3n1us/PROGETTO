<!-- 
PROBLEMI 2 : 
1) cliccando sul canvas diventa bianco e non si capisce piu nulla (firefox)
2) premendo tasto movimento e poi cliccando finestra il component
continua a muoversi in quella direzione 
--> 

<html>
<style>	
	canvas {
    border:1px solid #d3d3d3;
    
    background-color: #f1f1f1;
}
</style>
<body onload="startGame()">
<script>
	var myGamePiece;

function startGame() {
    myGameArea.start();
    myGamePiece = new component(30, 30, "red", 10, 120);
}
var myGameArea = {
    canvas : document.createElement("canvas"),
    start : function() {
        this.canvas.width = 480;
        this.canvas.height = 270;
        this.context = this.canvas.getContext("2d");
        document.body.insertBefore(this.canvas, document.body.childNodes[0]);
        this.interval = setInterval(updateGameArea, 20);
        
        //VANNO AGGIUNTI GLI EVENT LISTENER PER KEYBOARD INPUT
        //Qui versione: Multiple Keys Pressed, per permettere di muoversi in diagonale
        window.addEventListener('keydown', function (e) {
            myGameArea.keys = (myGameArea.keys || []);	// se stesso o nuovo array
            myGameArea.keys[e.keyCode] = true;	//bottone premuto
        })
        window.addEventListener('keyup', function (e) {
            myGameArea.keys[e.keyCode] = false;	//bottone non piu premuto
        })
    }, 
    clear : function(){
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
    }
}


function component(width,height,color,x,y){	//costruttore
	this.width = width;
    this.height = height;
    this.speedX = 0;	//sono usati come indicatori di velocita
    this.speedY = 0;
    this.x = x;
    this.y = y; 
    
    this.update = function() {
        ctx = myGameArea.context;
        ctx.fillStyle = color;
        ctx.fillRect(this.x, this.y, this.width, this.height);
    }
    
    this.newPos = function() {	//cambia la posizione del component
		//lavorando su speedX e speedY 
        this.x += this.speedX;
        this.y += this.speedY;
    }
	}
		
function updateGameArea() {	//va chiamata periodicamente
    myGameArea.clear();
	// se non metto questo, il component "fluttua" cioè continua a muoversi in quella
	//direzione, ma perchè in gameController non era necessario????
    myGamePiece.speedX = 0;
    myGamePiece.speedY = 0;
    //movimenti: W,A,S,D
    if (myGameArea.keys && myGameArea.keys[65]) {myGamePiece.speedX = -1; }
    if (myGameArea.keys && myGameArea.keys[68]) {myGamePiece.speedX = 1; }
    if (myGameArea.keys && myGameArea.keys[87]) {myGamePiece.speedY = -1; }
    if (myGameArea.keys && myGameArea.keys[83]) {myGamePiece.speedY = 1; }
    myGamePiece.newPos();
    myGamePiece.update();
}



//per fermare il component (a che serve???)



</script>
</html>
